@model ExamationOnline.Areas.Student.ViewModels.StudentExamListingViewModel

<div class="row mb-3">
    <div class="col-md-6 col-12">
        <div class="input-group">
            <input type="text" id="searchInput" class="form-control" placeholder="Search exam..." value="@Model.SearchQuery">
            <button class="btn btn-outline-primary" type="button" id="btnSearch">
                Go
            </button>
        </div>
    </div>
    <div class="col-md-2 col-6 mt-md-0 mt-2">
        <select id="pageSizeSelect" class="form-select">
            <option value="5" selected="@(Model.PageSize == 5)">5 rows</option>
            <option value="10" selected="@(Model.PageSize == 10)">10 rows</option>
            <option value="15" selected="@(Model.PageSize == 15)" )>15 rows</option>
        </select>
    </div>
</div>

<div class="table-responsive mb-4">
    <table class="table table-hover align-middle mb-0" id="examTable">
        <thead class="table-light">
            <tr>
                <th class="sortable" data-sort="examname">
                    Exam Name
                </th>
                <th class="sortable" data-sort="startdate">
                    Start Date
                </th>
                <th class="sortable" data-sort="enddate">
                    End Date
                </th>
                <th class="sortable" data-sort="duration">
                    Duration (min)
                </th>
                <th class="sortable" data-sort="totalquestion">
                    Total Questions
                </th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @if (Model.Exams != null && Model.Exams.Any())
            {
                foreach (var exam in Model.Exams)
                {
                    <tr>
                        <td>
                            <span class="text-wrap text-break text-decoration-none fw-bold">
                                @exam.ExamName
                            </span>
                        </td>
                        <td>@(exam.StartDate.HasValue ? exam.StartDate.Value.ToString("dd/MM/yyyy HH:mm") : "-")</td>
                        <td>@(exam.EndDate.HasValue ? exam.EndDate.Value.ToString("dd/MM/yyyy HH:mm") : "-")</td>
                        <td>@exam.Duration</td>
                        <td>@(exam.TotalQuestion ?? 0)</td>
                        <td>
                            <div class="d-flex gap-2">
                                <a href="/Student/StudentExam/ConfirmTakeExam/@exam.ExamId" class="btn btn-sm btn-primary hover-boxshadow">
                                    Start
                                </a>
                            </div>
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="6" class="text-center py-4">No exams found.</td>
                </tr>
            }
        </tbody>
    </table>
</div>

<!-- Pagination -->
@{
    int totalPages = (int)Math.Ceiling((double)Model.TotalRecords / Model.PageSize);
    int startPage = Math.Max(1, Model.CurrentPage - 2);
    int endPage = Math.Min(totalPages, startPage + 4);
    if (endPage - startPage < 4 && totalPages > 4)
    {
        startPage = Math.Max(1, endPage - 4);
    }
}
<div class="row">
    <div class="col-md-6">
    </div>
    <div class="col-md-6">
        <nav aria-label="Page navigation">
            <ul class="pagination justify-content-end">
                <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                    <a class="page-link" href="javascript:void(0)" data-page="1">First</a>
                </li>
                <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                    <a class="page-link" href="javascript:void(0)" data-page="@(Model.CurrentPage - 1)">Previous</a>
                </li>

                @for (int i = startPage; i <= endPage; i++)
                {
                    <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                        <a class="page-link" href="javascript:void(0)" data-page="@i">@i</a>
                    </li>
                }

                <li class="page-item @(Model.CurrentPage == totalPages ? "disabled" : "")">
                    <a class="page-link" href="javascript:void(0)" data-page="@(Model.CurrentPage + 1)">Next</a>
                </li>
                <li class="page-item @(Model.CurrentPage == totalPages ? "disabled" : "")">
                    <a class="page-link" href="javascript:void(0)" data-page="@totalPages">Last</a>
                </li>
            </ul>
        </nav>
    </div>
</div>